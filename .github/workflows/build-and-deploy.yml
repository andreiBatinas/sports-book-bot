name: CI/CD pipeline

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true
#2
env:
  REGISTRY: "registry.digitalocean.com/sports-app"
  IMAGE_NAME: "sports-bot"
  K8S_CLUSTER_NAME: "k8s-cluster-sports"
  KUSTOMIZE_FOLDER: k8s/overlays/prod
  NAMESPACE: "sports"

#3
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest
  deploy:
    name: Deploy to Digital Ocean
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Configure kubectl credentials
        # https://docs.digitalocean.com/products/kubernetes/how-to/connect-to-cluster/
        run: |
          doctl kubernetes cluster kubeconfig save ${{ env.K8S_CLUSTER_NAME }}

      - name: Deploy To Kubernetes
        run: |
          kubectl apply -k ${{ env.KUSTOMIZE_FOLDER }}

      - name: Rollout the app
        run: |
          kubectl rollout restart deployment bot-deployment -n ${{ env.NAMESPACE }}
